{"version":3,"sources":["logo.svg","Components/Nav_bar.js","Components/Homepage.js","App.js","reportWebVitals.js","index.js"],"names":["Nav_bar","useState","navbarcolor","setnavbarcolor","window","addEventListener","scrollY","Navbar","collapseOnSelect","fixed","variant","expand","className","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","eventKey","Homepage","Grid","xs","spacing","item","container","lg","sm","style","backgroundColor","color","fontSize","screen","width","options","strings","autoStart","loop","App","height","background","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAAe,I,4CCmDAA,MAxCf,WACE,MAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KASA,OADAC,OAAOC,iBAAiB,UAPL,WACbD,OAAOE,SAAW,GACpBH,GAAe,GAEfA,GAAe,MAKjB,8BACE,eAACI,EAAA,EAAD,CACEC,kBAAgB,EAChBC,MAAM,MACNC,QAAQ,OACRC,OAAO,KACPC,UAAWV,EAAc,UAAY,YALvC,UAOE,cAACK,EAAA,EAAOM,MAAR,CAAcC,KAAK,QAAnB,yBACA,cAACP,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,0BAC7B,eAACT,EAAA,EAAOU,SAAR,CAAiBC,GAAG,wBAApB,UACE,eAACC,EAAA,EAAD,CAAKP,UAAU,UAAf,UACE,cAACO,EAAA,EAAIC,KAAL,CAAUN,KAAK,QAAf,kBACA,cAACK,EAAA,EAAIC,KAAL,CAAUN,KAAK,WAAf,mBACA,cAACK,EAAA,EAAIC,KAAL,CAAUN,KAAK,WAAf,oBACA,cAACK,EAAA,EAAIC,KAAL,CAAUN,KAAK,WAAf,2BAEF,eAACK,EAAA,EAAD,WACE,cAACA,EAAA,EAAIC,KAAL,CAAUN,KAAK,SAAf,wBACA,cAACK,EAAA,EAAIC,KAAL,CAAUC,SAAU,EAAGP,KAAK,SAA5B,oC,iCCIGQ,MA1Cf,WACE,OACE,8BACE,qBAAKV,UAAU,SAAf,SACE,eAACW,EAAA,EAAD,CAAMC,GAAI,GAAIC,QAAS,EAAGC,MAAI,EAACC,WAAS,EAACf,UAAU,UAAnD,UACE,cAACW,EAAA,EAAD,CACEG,MAAI,EACJE,GAAI,EACJC,GAAI,GACJL,GAAI,GACJM,MAAO,CACLC,gBAAiB,cACjBC,MAAO,QACPC,SAAU7B,OAAO8B,OAAOC,MAAQ,IAAM,GAAK,IAR/C,SAWE,cAAC,IAAD,CACEL,MAAO,GACPM,QAAS,CACPC,QAAS,CACP,kBACA,aACA,cACA,kBAEFC,WAAW,EACXC,MAAM,OAIZ,cAAChB,EAAA,EAAD,CACEG,MAAI,EACJE,GAAI,EACJC,GAAI,EACJL,GAAI,GACJM,MAAO,CAAEC,gBAAiB,mBChBvBS,MAhBf,WACE,OACE,sBAAK5B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,yBACEM,GAAG,OACHY,MAAO,CAAEW,OAAQ,QAASC,WAAY,UAExC,yBAASZ,MAAO,CAAEW,OAAQ,QAASC,WAAY,UAC/C,yBAASZ,MAAO,CAAEW,OAAQ,QAASC,WAAY,UAC/C,yBAASZ,MAAO,CAAEW,OAAQ,QAASC,WAAY,cCLtCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e01887b2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from \"react\";\r\nimport \"./Nav_bar.css\";\r\nimport {\r\n  NavDropdown,\r\n  Navbar,\r\n  NavLink,\r\n  Form,\r\n  Nav,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\n\r\nfunction Nav_bar() {\r\n  const [navbarcolor, setnavbarcolor] = useState(false);\r\n  const changeback = () => {\r\n    if (window.scrollY >= 80) {\r\n      setnavbarcolor(true);\r\n    } else {\r\n      setnavbarcolor(false);\r\n    }\r\n  };\r\n  window.addEventListener(\"scroll\", changeback);\r\n  return (\r\n    <div>\r\n      <Navbar\r\n        collapseOnSelect\r\n        fixed=\"top\"\r\n        variant=\"dark\"\r\n        expand=\"lg\"\r\n        className={navbarcolor ? \"bkcolor\" : \"bkcolor_1\"}\r\n      >\r\n        <Navbar.Brand href=\"#home\">Ajay Tiwari</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"#sec1\">Home</Nav.Link>\r\n            <Nav.Link href=\"#pricing\">About</Nav.Link>\r\n            <Nav.Link href=\"#pricing\">Videos</Nav.Link>\r\n            <Nav.Link href=\"#pricing\">Contact Me</Nav.Link>\r\n          </Nav>\r\n          <Nav>\r\n            <Nav.Link href=\"#deets\">More deets</Nav.Link>\r\n            <Nav.Link eventKey={2} href=\"#memes\">\r\n              Dank memes\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav_bar;\r\n","import \"./Homepage.css\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Typewriter from \"typewriter-effect\";\r\nfunction Homepage() {\r\n  return (\r\n    <div>\r\n      <div className=\"banner\">\r\n        <Grid xs={12} spacing={2} item container className=\"Gridbox\">\r\n          <Grid\r\n            item\r\n            lg={6}\r\n            sm={12}\r\n            xs={12}\r\n            style={{\r\n              backgroundColor: \"transparent\",\r\n              color: \"white\",\r\n              fontSize: window.screen.width < 600 ? 30 : 80,\r\n            }}\r\n          >\r\n            <Typewriter\r\n              style={{}}\r\n              options={{\r\n                strings: [\r\n                  \"Hello World !! \",\r\n                  \"I am Ajay \",\r\n                  \"I am Singer\",\r\n                  \" I am Composer\",\r\n                ],\r\n                autoStart: true,\r\n                loop: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={6}\r\n            sm={6}\r\n            xs={12}\r\n            style={{ backgroundColor: \"green\" }}\r\n          ></Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Homepage;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport Nav_bar from \"./Components/Nav_bar\";\nimport Homepage from \"./Components/Homepage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav_bar />\n      <Homepage />\n      <section\n        id=\"sec1\"\n        style={{ height: \"100vh\", background: \"#fff\" }}\n      ></section>\n      <section style={{ height: \"100vh\", background: \"#000\" }}></section>\n      <section style={{ height: \"100vh\", background: \"#fff\" }}></section>\n      <section style={{ height: \"100vh\", background: \"#000\" }}></section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}